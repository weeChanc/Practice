apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def deps = [:]
def versions = [:]
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.retrofit = "2.3.0"
versions.arch_core = "1.1.0"
versions.room = "1.1.0-alpha1"
versions.lifecycle = "1.1.0"

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"


android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.weechan.myapplication"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/rxjava.PROPERTIES'
        exclude 'META-INF/RXJAVA.properties'
        exclude 'META-INF/RXJAVA.PROPERTIES'
        exclude 'META-INF/rxjava'
        exclude 'META-INF/RXJAVA'
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

//    // ViewModel and LiveData
//    implementation "android.arch.lifecycle:extensions:1.1.0"
//    // alternatively, just ViewModel
//    implementation "android.arch.lifecycle:viewmodel:1.1.0"
//    // alternatively, just LiveData
//    implementation "android.arch.lifecycle:livedata:1.1.0"
//
//    annotationProcessor "android.arch.lifecycle:compiler:1.1.0"
//
//    // Room (use 1.1.0-alpha3 for latest alpha)
//    implementation "android.arch.persistence.room:runtime:1.0.0"
//    kapt "android.arch.persistence.room:compiler:1.0.0"
//
//    // Paging
//    implementation "android.arch.paging:runtime:1.0.0-alpha6"
//
//    // Test helpers for LiveData
//    testImplementation "android.arch.core:core-testing:1.1.0"
//
//    // Test helpers for Room
//    testImplementation "android.arch.persistence.room:testing:1.0.0"
//
//
//    implementation "android.arch.persistence.room:rxjava2:1.0.0"
//    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
//
//    // ReactiveStreams support for LiveData
//    implementation "android.arch.lifecycle:reactivestreams:1.1.0"
//
//    compile 'com.squareup.retrofit2:retrofit:2.0.2'
//    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
//    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
//    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
//
//    compile 'com.github.littlejigege:suger:v0.0.8.5'

    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler
    implementation deps.room.runtime
    kapt deps.room.compiler
    implementation deps.room.rxjava2

    // RxJava
//    implementation deps.rx_android
//    implementation deps.rxjava2
//    implementation deps.retrofit.runtime
//    implementation deps.retrofit.gson

    testCompile 'org.mockito:mockito-core:2.7.6'


    compile 'com.squareup.retrofit2:retrofit:2.3.0'//retrofit
    compile 'com.google.code.gson:gson:2.6.2'//Gson 库
//下面两个是RxJava 和RxAndroid
    compile 'io.reactivex:rxjava:1.3.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'//转换器，请求结果转换成Model
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'//配合Rxjava 使用

    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'

    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.android.support:recyclerview-v7:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'


}

